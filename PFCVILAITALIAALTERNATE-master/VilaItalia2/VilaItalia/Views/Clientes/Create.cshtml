@model VilaItalia.Models.Cliente
<h2>Cadastro Cliente</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="row">
            <div class="form-horizontal">
                <hr />
                <div class="col-md- col-lg-5 col-sm-5">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Telefone, htmlAttributes: new { @class = "control-label col-md-2 " })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control", @onkeyup = "maskIt(this,event,'(###) ####-####')" } })
                            @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Celular, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-5">
                            @Html.EditorFor(model => model.Celular, new { htmlAttributes = new { @class = "form-control", @onkeyup = "maskIt(this,event,'(###)# ####-####')" } })
                            @Html.ValidationMessageFor(model => model.Celular, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", @onkeyup = "maskIt(this,event,'###.###.###-##')" } })
                            @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <p> <strong>Data de nascimento</strong>   </p>

                    <div class="col-lg-pull-11">
                        @Html.LabelFor(model => model.Dia_Aniversario, htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class="col-md-2">
                            @Html.EditorFor(model => model.Dia_Aniversario, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Dia_Aniversario, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-lg-pull-12">
                        @Html.LabelFor(model => model.Mes_Aniversario, htmlAttributes: new { @class = "control-label col-md-1" })
                        <div class=" col-md-2">
                            @Html.EditorFor(model => model.Mes_Aniversario, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Mes_Aniversario, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-lg-10">
                        @Html.LabelFor(model => model.Observacao, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Observacao, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Observacao, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
            </div>


            <div class="form-horizontal">
                <div class="row">
                    <div class="col-md- col-lg-5 col-sm-5">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CEP, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.CEP, new { htmlAttributes = new { @class = "form-control", @onblur = "pesquisacep(this.value)", @onkeyup = "maskIt(this,event,'#####-###')" } })
                                @Html.ValidationMessageFor(model => model.CEP, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Rua, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Rua, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Rua, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group ">
                            @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Referencia, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Referencia, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Referencia, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-8 col-md-10">
                <input type="submit" value="Cadastrar" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
